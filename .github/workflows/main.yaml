name: Build and Release Wails App

on:
  push:
    branches:
      - dev # Trigger on push to the dev branch
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    runs-on: windows-latest
    steps:
      # Step to checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step to set up the Go environment
      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.5'

      # Step to set up the Node.js environment
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step to install dependencies for the frontend
      - name: Install frontend dependencies
        run: cd frontend && yarn install

      # Step to install Wails CLI
      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # Step to build the Wails app
      - name: Build the Wails App with NSIS and UPX
        run: wails build -nsis -upx

      # Step to archive build output
      - name: Archive build output
        uses: actions/upload-artifact@v3
        with:
          name: wails-windows-build
          path: build/bin/

  release:
    runs-on: windows-latest
    needs: build # Wait for the build job to complete

    steps:
      # Step to download the build artifact from the build job
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: wails-windows-build
          path: build/bin/

      - name: List files
        run: dir # 在Windows环境下列出文件

      # Step to read version from the 'version' file
      - name: Read version from file
        id: read_version
        uses: andstor/file-reader-action@v1
        with:
          path: version  # 确保路径正确

      # Step to create a new GitHub Release using the version
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.read_version.outputs.contents }} # Use the version from the 'version' file
          release_name: Release ${{ steps.read_version.outputs.contents }}
          draft: false
          prerelease: false
          files: build/bin/*.exe # Upload the built executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub token for authentication
